plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

apply from: "$project.rootDir/app_test_runner.gradle"
apply plugin: 'kotlin-android'
apply from: "$project.rootDir/spotless.gradle"

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.nyt.mostpopular"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        flavorDimensions "default"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    jacoco {
        version = '0.7.9'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

    productFlavors {

        Development {
            dimension "default"
            buildConfigField "String", "BASE_URL", "\"https://api.nytimes.com/svc/mostpopular/v2/\""
            buildConfigField "String", "API_KEY", "\"8e5ovjzjlGNCMiAU4BfFRLYwsUEKcS4j\""
        }

        NYT {
            dimension "default"
            buildConfigField "String", "BASE_URL", "\"https://api.nytimes.com/svc/mostpopular/v2/\""
            buildConfigField "String", "API_KEY", "\"8e5ovjzjlGNCMiAU4BfFRLYwsUEKcS4j\""
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "de.hdodenhof:circleimageview:${versions.circleimageview}"
    implementation "com.squareup.picasso:picasso:${versions.picasso}"
    implementation "com.facebook.shimmer:shimmer:${versions.shimmer_layout}"

    // WebView
    implementation "androidx.webkit:webkit:${versions.webkit}"

    // Android Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.navigations}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.navigations}"
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.navigations}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.navigations}"
    implementation "androidx.fragment:fragment-ktx:${versions.fragment_ktx}"

    // lifecycle + liveData + viewModel
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle_livedata}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle_extensions}"

    // Hilt dependency Injection
    implementation "com.google.dagger:hilt-android:${versions.hilt_version}"
    implementation "androidx.legacy:legacy-support-v4:${versions.legacy_support_v4}"
    kapt "com.google.dagger:hilt-android-compiler:${versions.hilt_version}"

    //ViewModel Injection with Hilt
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:${versions.viewmodel_hilt}"
    kapt "androidx.hilt:hilt-compiler:${versions.viewmodel_hilt}"

    //Network libraries
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.retrofit_gson_convertor}"
    implementation "com.google.code.gson:gson:${versions.gson}"

    //Encrypted Shared preference
    implementation "androidx.security:security-crypto:${versions.encrypted_preference}"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakcanary}"

    //Testing
    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "androidx.test.ext:junit:${versions.junit_ext}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso_core}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation 'org.mockito:mockito-inline:3.3.3'

    androidTestImplementation 'androidx.test:runner:1.4.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
}
repositories {
    mavenCentral()
}
